<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN" "http://www.springframework.org/dtd/spring-beans.dtd">

<beans>

	<!-- ========================= RESOURCE DEFINITIONS ========================= -->

	<!-- Configurer that replaces ${...} placeholders with values from a properties file -->
	<!-- (in this case, JDBC-related settings for the dataSource definition below) -->
	<!--  bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="/WEB-INF/jdbc.properties" />
	</bean-->
	<bean id="propertyConfigurer"
		class="org.caisi.common.OscarPropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>/WEB-INF/jdbc.properties</value>
				
			</list>
		</property>
		<property name="placeholderPrefix" value="$A{" />
	</bean>

	<!-- Local Apache Commons DBCP DataSource that refers to a combined database -->
	<!-- (see dataAccessContext-jta.xml for an alternative) -->
	<!-- The placeholders are resolved from jdbc.properties through -->
	<!-- the PropertyPlaceholderConfigurer in applicationContext.xml -->
	<!--  bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName"
			value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean-->
	
	<bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName"
			value="$A{oscar.db_driver}" />
		<property name="url" value="$A{oscar.db_uri}$A{oscar.db_name}" />
		<property name="username" value="$A{oscar.db_username}" />
		<property name="password" value="$A{oscar.db_password}" />
	</bean>

	<!-- Hibernate SessionFactory -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
				
		<!-- property name="mappingDirectoryLocations">
			
			<list>
				<value>classpath:/org/caisi/casemgmt/model</value>
	
			</list>
		</property -->
		<property name="mappingResources">
			<list>
				<value>org/caisi/casemgmt/model/allergy.hbm.xml</value>
				<value>org/caisi/model/Admission.hbm.xml</value>
				<value>org/caisi/model/Program.hbm.xml</value>
				<value>org/caisi/casemgmt/model/ProgramProvider.hbm.xml</value>
				<value>org/caisi/casemgmt/model/AccessType.hbm.xml</value>
				<value>org/caisi/casemgmt/model/ProgramAccess.hbm.xml</value>
				<value>org/caisi/casemgmt/model/ProgramTeam.hbm.xml</value>
				<value>org/caisi/casemgmt/model/DefaultRoleAccess.hbm.xml</value>
				<value>org/caisi/model/ProviderRoleProgram.hbm.xml</value>
				<value>org/caisi/casemgmt/model/casemgmt_cpp.hbm.xml</value>
				<value>org/caisi/casemgmt/model/casemgmt_issue.hbm.xml</value>
				<value>org/caisi/casemgmt/model/casemgmt_note.hbm.xml</value>
				<value>org/caisi/casemgmt/model/drug.hbm.xml</value>
				<value>org/caisi/model/EChart.hbm.xml</value>
				<value>org/caisi/casemgmt/model/Encounterform.hbm.xml</value>
				<value>org/caisi/casemgmt/model/issue.hbm.xml</value>
				<value>org/caisi/casemgmt/model/Messagetbl.hbm.xml</value>
				<value>org/caisi/casemgmt/model/Msgdemomap.hbm.xml</value>
				<value>org/caisi/casemgmt/model/prescription.hbm.xml</value>
				<value>org/caisi/casemgmt/model/ProviderDefaultProgram.hbm.xml</value>
				<value>org/caisi/casemgmt/model/Providerext.hbm.xml</value>
				<value>org/caisi/model/provider.hbm.xml</value>
				<value>org/caisi/model/CaisiRole.hbm.xml</value>
				<value>org/caisi/model/Role.hbm.xml</value>
				<value>org/caisi/model/Demographic.hbm.xml</value>
				<value>org/caisi/model/TicklerUpdate.hbm.xml</value>
				<value>org/caisi/model/Tickler.hbm.xml</value>
				<value>org/caisi/model/TicklerComment.hbm.xml</value>
			</list>
		</property>

		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">
					${hibernate.dialect}
				</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.generate_statistics">true</prop>
			</props>
		</property>
		<property name="eventListeners">
			<map>
				<entry key="merge">
					<bean
						class="org.springframework.orm.hibernate3.support.IdTransferringMergeEventListener" />
				</entry>
			</map>
		</property>
	</bean>
	
	<!-- DAO -->
	<bean id="IssueDAO" class="org.caisi.casemgmt.dao.hibernate.IssueDAOHibernate">
		<property name="sessionFactory">
			<ref local="sessionFactory"/>
		</property>
	</bean>
	<bean id="CaseManagementNoteDAO" class="org.caisi.casemgmt.dao.hibernate.CaseManagementNoteDAOHibernate">
		<property name="sessionFactory">
			<ref local="sessionFactory"/>
		</property>
	</bean>
	<bean id="CaseManagementIssueDAO" class="org.caisi.casemgmt.dao.hibernate.CaseManagementIssueDAOHibernate">
		<property name="sessionFactory">
			<ref local="sessionFactory"/>
		</property>
	</bean>
	<bean id="CaseManagementCPPDAO" class="org.caisi.casemgmt.dao.hibernate.CaseManagementCPPDAOHibernate">
		<property name="sessionFactory">
			<ref local="sessionFactory"/>
		</property>
	</bean>
	<bean id="AllergyDAO" class="org.caisi.casemgmt.dao.hibernate.AllergyDAOHibernate">
		<property name="sessionFactory">
			<ref local="sessionFactory"/>
		</property>
	</bean>
	<bean id="PrescriptionDAO" class="org.caisi.casemgmt.dao.hibernate.PrescriptionDAOHibernate">
		<property name="sessionFactory">
			<ref local="sessionFactory"/>
		</property>
	</bean>
	<bean id="ticklerDAO" class="org.caisi.dao.hibernate.TicklerDAOHibernate">
		<property name="sessionFactory">
			<ref local="sessionFactory"/>
		</property>
	</bean>
	<bean id="customFilterDAO" class="org.caisi.dao.hibernate.CustomFilterDAOHibernate">
		<property name="sessionFactory">
			<ref local="sessionFactory"/>
		</property>
	</bean>
	
	<bean id="EncounterFormDAO" class="org.caisi.casemgmt.dao.hibernate.EncounterFormDAOHibernate" autowire="byType" />
	<bean id="MessagetblDAO" class="org.caisi.casemgmt.dao.hibernate.MessagetblDAOHibernate" autowire="byType" />
	<bean id="EchartDAO" class="org.caisi.casemgmt.dao.hibernate.EchartDAOHibernate" autowire="byType" />
	<bean id="ProviderCaisiRoleDAO" class="org.caisi.casemgmt.dao.hibernate.ProviderCaisiRoleDAOHibernate" autowire="byType" />
	<bean id="ProviderRoleProgramDao" class="org.caisi.dao.hibernate.HibernateProviderRoleProgramDao" autowire="byType" />
	
	<bean id="ProviderSignitureDao" class="org.caisi.casemgmt.dao.hibernate.ProviderSignitureDaoHibernate" autowire="byType" />
	<bean id="DemographicDAO" class="org.caisi.dao.hibernate.DemographicDAOHibernate" autowire="byType" />
	<bean id="ProviderDAO" class="org.caisi.dao.hibernate.ProviderDAOHibernate" autowire="byType" />
	<bean id="RoleProgramAccessDAO" class="org.caisi.casemgmt.dao.hibernate.RoleProgramAccessDAOHibernate" autowire="byType" />
	
	<!-- Transaction manager for a single Hibernate SessionFactory (alternative to JTA) -->
	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- ========================= BUSINESS OBJECT DEFINITIONS ========================= -->

	<!--
		- A parent bean definition which is a base definition for transaction proxies.
		- It's marked as abstract, since it's not supposed to be instantiated itself.
		- We set shared transaction attributes here, following our naming patterns.
		- The attributes can still be overridden in child bean definitions.
	-->
	<bean id="baseTransactionProxy"
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean"
		abstract="true">
		<property name="transactionManager" ref="transactionManager" />
		<property name="transactionAttributes">
			<props>
				<prop key="*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>
	
	<!-- managers  -->
	<bean id="CaseManagementManager" 
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager">
			<ref local="transactionManager"/>
		</property>
		<property name="target">
			<ref local="CaseManagementManagerTarget"/>
		</property>
		<property name="transactionAttributes">
			<props>
				<prop key="*">PROPAGATION_REQUIRED</prop>
			</props>
		</property>
	</bean>

	<bean id="CaseManagementManagerTarget"
		class="org.caisi.casemgmt.service.impl.CaseManagementManagerImpl">
		<property name="caseManagementNoteDAO">
			<ref local="CaseManagementNoteDAO"/>
		</property>
		<property name="caseManagementIssueDAO">
			<ref local="CaseManagementIssueDAO"/>
		</property>
		<property name="caseManagementCPPDAO">
			<ref local="CaseManagementCPPDAO"/>
		</property>
		<property name="allergyDAO">
			<ref local="AllergyDAO"/>
		</property>
		<property name="prescriptionDAO">
			<ref local="PrescriptionDAO"/>
		</property>
		<property name="issueDAO">
			<ref local="IssueDAO"/>
		</property>
		<property name="encounterFormDAO">
			<ref local="EncounterFormDAO"/>
		</property>
		<property name="messagetblDAO">
			<ref local="MessagetblDAO"/>
		</property>
		<property name="echartDAO">
			<ref local="EchartDAO"/>
		</property>
		<property name="providerSignitureDao">
			<ref local="ProviderSignitureDao"/>
		</property>
		<property name="providerDAO">
			<ref local="ProviderDAO"/>
		</property>
		<property name="demographicDAO">
			<ref local="DemographicDAO"/>
		</property>
		<property name="providerRoleProgramDao">
			<ref local="ProviderRoleProgramDao"/>
		</property>
		<property name="roleProgramAccessDAO">
			<ref local="RoleProgramAccessDAO"/>
		</property>
	</bean>
	<bean id="ticklerManager" 
		class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
		<property name="transactionManager">
			<ref local="transactionManager"/>
		</property>
		<property name="target">
			<ref local="ticklerManagerTarget"/>
		</property>
		<property name="transactionAttributes">
			<props>
				<prop key="*">PROPAGATION_REQUIRED,readOnly</prop>
			</props>
		</property>
	</bean>

	<bean id="ticklerManagerTarget"
		class="org.caisi.service.impl.TicklerManagerImpl">
		<property name="ticklerDAO">
			<ref local="ticklerDAO"/>
		</property>
		<property name="customFilterDAO">
			<ref local="customFilterDAO"/>
		</property>
	</bean>

	<bean class="org.caisi.comp.spring.ApplicationContextRecorder"/>

 <bean id="pfFactory" class="org.caisi.comp.spring.ServiceBeanFactory" lazy-init="true"></bean>
 
 <bean id="programManagerRemote" factory-bean="pfFactory" factory-method="getBean" lazy-init="true">
	<constructor-arg><value>programManager</value></constructor-arg>
 </bean>
 
 <bean id="admissionManagerRemote" factory-bean="pfFactory" factory-method="getBean" lazy-init="true">
	<constructor-arg><value>admissionManager</value></constructor-arg>
 </bean>
 
</beans>

