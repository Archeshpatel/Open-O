package org.caisi.PMmodule.model.base;

import java.io.Serializable;


/**
 * This class has been automatically generated by Hibernate Synchronizer.
 * For more information or documentation, visit The Hibernate Synchronizer page
 * at http://www.binamics.com/hibernatesync or contact Joe Hudson at joe@binamics.com.
 */
public class BaseLogPK implements Serializable {

	private int hashCode = Integer.MIN_VALUE;

	private java.lang.String _providerNo;
	private java.util.Date _dateTime;

	public BaseLogPK () {}
	
	public BaseLogPK (
		java.lang.String _providerNo,
		java.util.Date _dateTime) {

		this.setProviderNo(_providerNo);
		this.setDateTime(_dateTime);
	}


	public java.lang.String getProviderNo () {
		return _providerNo;
	}

	public void setProviderNo (java.lang.String _providerNo) {
		hashCode = Integer.MIN_VALUE;
		this._providerNo = _providerNo;
	}

	public java.util.Date getDateTime () {
		return _dateTime;
	}

	public void setDateTime (java.util.Date _dateTime) {
		hashCode = Integer.MIN_VALUE;
		this._dateTime = _dateTime;
	}

	public boolean equals (Object obj) {
		if (null == obj) return false;
		if (!(obj instanceof org.caisi.PMmodule.model.LogPK)) return false;
		else {
			org.caisi.PMmodule.model.LogPK mObj = (org.caisi.PMmodule.model.LogPK) obj;
			if (null != this.getProviderNo() && null != mObj.getProviderNo()) {
				if (!this.getProviderNo().equals(mObj.getProviderNo())) {
					return false;
				}
			}
			else {
				return false;
			}
			if (null != this.getDateTime() && null != mObj.getDateTime()) {
				if (!this.getDateTime().equals(mObj.getDateTime())) {
					return false;
				}
			}
			else {
				return false;
			}
			return true;
		}
	}

	public int hashCode () {
		if (Integer.MIN_VALUE == this.hashCode) {
			StringBuffer sb = new StringBuffer();
			if (null != this.getProviderNo()) {
				sb.append(this.getProviderNo().hashCode());
				sb.append(":");
			}
			else {
				return super.hashCode();
			}
			if (null != this.getDateTime()) {
				sb.append(this.getDateTime().hashCode());
				sb.append(":");
			}
			else {
				return super.hashCode();
			}
			this.hashCode = sb.toString().hashCode();
		}
		return this.hashCode;
	}

}