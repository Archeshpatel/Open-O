/*
* 
* Copyright (c) 2001-2002. Centre for Research on Inner City Health, St. Michael's Hospital, Toronto. All Rights Reserved. *
* This software is published under the GPL GNU General Public License. 
* This program is free software; you can redistribute it and/or 
* modify it under the terms of the GNU General Public License 
* as published by the Free Software Foundation; either version 2 
* of the License, or (at your option) any later version. * 
* This program is distributed in the hope that it will be useful, 
* but WITHOUT ANY WARRANTY; without even the implied warranty of 
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the 
* GNU General Public License for more details. * * You should have received a copy of the GNU General Public License 
* along with this program; if not, write to the Free Software 
* Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA. * 
* 
* <OSCAR TEAM>
* 
* This software was written for 
* Centre for Research on Inner City Health, St. Michael's Hospital, 
* Toronto, Ontario, Canada 
*/


package org.oscarehr.casemgmt.model.base;

import java.io.Serializable;


/**
 * This class has been automatically generated by Hibernate Synchronizer.
 * For more information or documentation, visit The Hibernate Synchronizer page
 * at http://www.binamics.com/hibernatesync or contact Joe Hudson at joe@binamics.com.
 *
 * This is an object that contains data related to the msgdemomap table.
 * Do not modify this class because it will be overwritten if the configuration file
 * related to this class is modified.
 *
 * @hibernate.class
 *  table="msgdemomap"
 */
public abstract class BaseMsgdemomap  implements Serializable {



	private int hashCode = Integer.MIN_VALUE;

	// primary key
	private java.lang.Integer _messageID;
	private java.lang.Integer _demographicNo;


	// constructors
	public BaseMsgdemomap () {
		initialize();
	}

	/**
	 * Constructor for primary key
	 */
	public BaseMsgdemomap (
		java.lang.Integer _messageID,
		java.lang.Integer _demographicNo) {

		this.setMessageID(_messageID);
		this.setDemographicNo(_demographicNo);
		initialize();
	}

	protected void initialize () {}



	/**
     * @hibernate.property
     *  column=messageID
	 * not-null=true
	 */
	public java.lang.Integer getMessageID () {
		return this._messageID;
	}

	/**
	 * Set the value related to the column: messageID
	 * @param _messageID the messageID value
	 */
	public void setMessageID (java.lang.Integer _messageID) {
		this._messageID = _messageID;
		this.hashCode = Integer.MIN_VALUE;
	}

	/**
     * @hibernate.property
     *  column=demographic_no
	 * not-null=true
	 */
	public java.lang.Integer getDemographicNo () {
		return this._demographicNo;
	}

	/**
	 * Set the value related to the column: demographic_no
	 * @param _demographicNo the demographic_no value
	 */
	public void setDemographicNo (java.lang.Integer _demographicNo) {
		this._demographicNo = _demographicNo;
		this.hashCode = Integer.MIN_VALUE;
	}


	public boolean equals (Object obj) {
		if (null == obj) return false;
		if (!(obj instanceof org.oscarehr.casemgmt.model.Msgdemomap)) return false;
		else {
			org.oscarehr.casemgmt.model.Msgdemomap mObj = (org.oscarehr.casemgmt.model.Msgdemomap) obj;
			if (null != this.getMessageID() && null != mObj.getMessageID()) {
				if (!this.getMessageID().equals(mObj.getMessageID())) {
					return false;
				}
			}
			else {
				return false;
			}
			if (null != this.getDemographicNo() && null != mObj.getDemographicNo()) {
				if (!this.getDemographicNo().equals(mObj.getDemographicNo())) {
					return false;
				}
			}
			else {
				return false;
			}
			return true;
		}
	}


	public int hashCode () {
		if (Integer.MIN_VALUE == this.hashCode) {
			StringBuffer sb = new StringBuffer();
			if (null != this.getMessageID()) {
				sb.append(this.getMessageID().hashCode());
				sb.append(":");
			}
			else {
				return super.hashCode();
			}
			if (null != this.getDemographicNo()) {
				sb.append(this.getDemographicNo().hashCode());
				sb.append(":");
			}
			else {
				return super.hashCode();
			}
			this.hashCode = sb.toString().hashCode();
		}
		return this.hashCode;
	}


	public String toString () {
		return super.toString();
	}

}