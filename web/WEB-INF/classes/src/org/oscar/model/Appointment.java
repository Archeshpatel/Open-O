package org.oscar.model;

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import org.hibernate.validator.Length;
import org.hibernate.validator.NotNull;

/**
 * Appointment generated by hbm2java
 */
@Entity
@Table(name = "appointment", catalog = "oscar_devel")
public class Appointment implements java.io.Serializable {

	private Integer appointmentNo;
	private String providerNo;
	private Date appointmentDate;
	private Date startTime;
	private Date endTime;
	private String name;
	private Integer demographicNo;
	private String notes;
	private String reason;
	private String location;
	private String resources;
	private String type;
	private String style;
	private String billing;
	private String status;
	private Date createdatetime;
	private Date updatedatetime;
	private String creator;
	private String remarks;

	public Appointment() {
	}

	public Appointment(String providerNo, Date appointmentDate, Date startTime,
			Date endTime) {
		this.providerNo = providerNo;
		this.appointmentDate = appointmentDate;
		this.startTime = startTime;
		this.endTime = endTime;
	}
	public Appointment(String providerNo, Date appointmentDate, Date startTime,
			Date endTime, String name, Integer demographicNo, String notes,
			String reason, String location, String resources, String type,
			String style, String billing, String status, Date createdatetime,
			Date updatedatetime, String creator, String remarks) {
		this.providerNo = providerNo;
		this.appointmentDate = appointmentDate;
		this.startTime = startTime;
		this.endTime = endTime;
		this.name = name;
		this.demographicNo = demographicNo;
		this.notes = notes;
		this.reason = reason;
		this.location = location;
		this.resources = resources;
		this.type = type;
		this.style = style;
		this.billing = billing;
		this.status = status;
		this.createdatetime = createdatetime;
		this.updatedatetime = updatedatetime;
		this.creator = creator;
		this.remarks = remarks;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "appointment_no", unique = true, nullable = false)
	public Integer getAppointmentNo() {
		return this.appointmentNo;
	}

	public void setAppointmentNo(Integer appointmentNo) {
		this.appointmentNo = appointmentNo;
	}

	@Column(name = "provider_no", nullable = false, length = 6)
	@NotNull
	@Length(max = 6)
	public String getProviderNo() {
		return this.providerNo;
	}

	public void setProviderNo(String providerNo) {
		this.providerNo = providerNo;
	}
	@Temporal(TemporalType.DATE)
	@Column(name = "appointment_date", nullable = false, length = 10)
	@NotNull
	public Date getAppointmentDate() {
		return this.appointmentDate;
	}

	public void setAppointmentDate(Date appointmentDate) {
		this.appointmentDate = appointmentDate;
	}
	@Temporal(TemporalType.TIME)
	@Column(name = "start_time", nullable = false, length = 8)
	@NotNull
	public Date getStartTime() {
		return this.startTime;
	}

	public void setStartTime(Date startTime) {
		this.startTime = startTime;
	}
	@Temporal(TemporalType.TIME)
	@Column(name = "end_time", nullable = false, length = 8)
	@NotNull
	public Date getEndTime() {
		return this.endTime;
	}

	public void setEndTime(Date endTime) {
		this.endTime = endTime;
	}

	@Column(name = "name", length = 50)
	@Length(max = 50)
	public String getName() {
		return this.name;
	}

	public void setName(String name) {
		this.name = name;
	}

	@Column(name = "demographic_no")
	public Integer getDemographicNo() {
		return this.demographicNo;
	}

	public void setDemographicNo(Integer demographicNo) {
		this.demographicNo = demographicNo;
	}

	@Column(name = "notes", length = 80)
	@Length(max = 80)
	public String getNotes() {
		return this.notes;
	}

	public void setNotes(String notes) {
		this.notes = notes;
	}

	@Column(name = "reason", length = 80)
	@Length(max = 80)
	public String getReason() {
		return this.reason;
	}

	public void setReason(String reason) {
		this.reason = reason;
	}

	@Column(name = "location", length = 30)
	@Length(max = 30)
	public String getLocation() {
		return this.location;
	}

	public void setLocation(String location) {
		this.location = location;
	}

	@Column(name = "resources", length = 10)
	@Length(max = 10)
	public String getResources() {
		return this.resources;
	}

	public void setResources(String resources) {
		this.resources = resources;
	}

	@Column(name = "type", length = 10)
	@Length(max = 10)
	public String getType() {
		return this.type;
	}

	public void setType(String type) {
		this.type = type;
	}

	@Column(name = "style", length = 10)
	@Length(max = 10)
	public String getStyle() {
		return this.style;
	}

	public void setStyle(String style) {
		this.style = style;
	}

	@Column(name = "billing", length = 10)
	@Length(max = 10)
	public String getBilling() {
		return this.billing;
	}

	public void setBilling(String billing) {
		this.billing = billing;
	}

	@Column(name = "status", length = 2)
	@Length(max = 2)
	public String getStatus() {
		return this.status;
	}

	public void setStatus(String status) {
		this.status = status;
	}
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "createdatetime", length = 19)
	public Date getCreatedatetime() {
		return this.createdatetime;
	}

	public void setCreatedatetime(Date createdatetime) {
		this.createdatetime = createdatetime;
	}
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updatedatetime", length = 19)
	public Date getUpdatedatetime() {
		return this.updatedatetime;
	}

	public void setUpdatedatetime(Date updatedatetime) {
		this.updatedatetime = updatedatetime;
	}

	@Column(name = "creator", length = 50)
	@Length(max = 50)
	public String getCreator() {
		return this.creator;
	}

	public void setCreator(String creator) {
		this.creator = creator;
	}

	@Column(name = "remarks", length = 50)
	@Length(max = 50)
	public String getRemarks() {
		return this.remarks;
	}

	public void setRemarks(String remarks) {
		this.remarks = remarks;
	}

}
